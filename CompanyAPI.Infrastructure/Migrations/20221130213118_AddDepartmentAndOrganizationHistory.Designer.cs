// <auto-generated />
using System;
using CompanyAPI.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CompanyAPI.Migrations
{
    [DbContext(typeof(CompanyDbContext))]
    [Migration("20221130213118_AddDepartmentAndOrganizationHistory")]
    partial class AddDepartmentAndOrganizationHistory
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.7");

            modelBuilder.Entity("CompanyAPI.Domain.Country", b =>
                {
                    b.Property<int>("GeoNameId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CountryCode")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("varchar(5)");

                    b.Property<string>("CountryName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("GeoNameId");

                    b.HasIndex("GeoNameId")
                        .IsUnique();

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("CompanyAPI.Domain.Department", b =>
                {
                    b.Property<int>("DepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("OrganizationId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasMaxLength(245)
                        .HasColumnType("varchar(245)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("DepartmentId", "OrganizationId");

                    b.HasIndex("DepartmentId")
                        .IsUnique();

                    b.HasIndex("OrganizationId");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("CompanyAPI.Domain.DepartmentHistory", b =>
                {
                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasMaxLength(245)
                        .HasColumnType("varchar(245)");

                    b.Property<int>("OrganizationId")
                        .HasColumnType("int");

                    b.Property<int>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("DepartmentId", "UpdatedAt");

                    b.HasIndex("OrganizationId", "UpdatedAt");

                    b.ToTable("DepartmentsHistory");
                });

            modelBuilder.Entity("CompanyAPI.Domain.Location", b =>
                {
                    b.Property<int>("LocationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("OrganizationId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("LocationName")
                        .IsRequired()
                        .HasMaxLength(245)
                        .HasColumnType("varchar(245)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("LocationId", "OrganizationId");

                    b.HasIndex("LocationId")
                        .IsUnique();

                    b.HasIndex("OrganizationId");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("CompanyAPI.Domain.Organization", b =>
                {
                    b.Property<int>("OrganizationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("City")
                        .HasMaxLength(245)
                        .HasColumnType("varchar(245)");

                    b.Property<string>("Country")
                        .HasMaxLength(245)
                        .HasColumnType("varchar(245)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("CrunchbaseUuid")
                        .HasColumnType("char(36)");

                    b.Property<string>("Domain")
                        .HasMaxLength(245)
                        .HasColumnType("varchar(245)");

                    b.Property<string>("HomepageUrl")
                        .HasMaxLength(1024)
                        .HasColumnType("varchar(1024)");

                    b.Property<string>("LogoUrl")
                        .HasMaxLength(512)
                        .HasColumnType("varchar(512)");

                    b.Property<string>("OrganizationName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("varchar(512)");

                    b.Property<string>("Permalink")
                        .HasMaxLength(512)
                        .HasColumnType("varchar(512)");

                    b.Property<string>("Region")
                        .HasMaxLength(245)
                        .HasColumnType("varchar(245)");

                    b.Property<string>("ShortDescription")
                        .HasMaxLength(512)
                        .HasColumnType("varchar(512)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("OrganizationId");

                    b.HasIndex("CrunchbaseUuid");

                    b.HasIndex("OrganizationId")
                        .IsUnique();

                    b.ToTable("Organizations");
                });

            modelBuilder.Entity("CompanyAPI.Domain.OrganizationHistory", b =>
                {
                    b.Property<int>("OrganizationId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("City")
                        .HasMaxLength(245)
                        .HasColumnType("varchar(245)");

                    b.Property<string>("LogoUrl")
                        .HasMaxLength(512)
                        .HasColumnType("varchar(512)");

                    b.Property<string>("OrganizationName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("varchar(512)");

                    b.Property<int>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("OrganizationId", "UpdatedAt");

                    b.ToTable("OrganizationsHistory");
                });

            modelBuilder.Entity("CompanyAPI.Domain.OrganizationRole", b =>
                {
                    b.Property<int>("OrganizationRoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("OrganizationRoleId");

                    b.HasIndex("OrganizationRoleId")
                        .IsUnique();

                    b.ToTable("OrganizationRoles");
                });

            modelBuilder.Entity("CompanyAPI.Domain.OrganizationRoleUsers", b =>
                {
                    b.Property<string>("Role")
                        .HasColumnType("longtext");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.ToTable("OrganizationRoleUsers", t => t.ExcludeFromMigrations());
                });

            modelBuilder.Entity("CompanyAPI.Domain.OrganizationRolesResponse", b =>
                {
                    b.Property<string>("City")
                        .HasColumnType("longtext");

                    b.Property<string>("LogoUrl")
                        .HasColumnType("longtext");

                    b.Property<int>("OrganizationId")
                        .HasColumnType("int");

                    b.Property<string>("OrganizationName")
                        .HasColumnType("longtext");

                    b.ToTable("UserOrganizations", t => t.ExcludeFromMigrations());
                });

            modelBuilder.Entity("CompanyAPI.Domain.OrganizationUserRole", b =>
                {
                    b.Property<int>("OrganizationId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("OrganizationRoleId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP(6)");

                    b.Property<int>("GrantedByUserId")
                        .HasColumnType("int");

                    b.HasKey("OrganizationId", "UserId", "OrganizationRoleId");

                    b.HasIndex("OrganizationId");

                    b.HasIndex("UserId");

                    b.ToTable("OrganizationUserRoles");
                });

            modelBuilder.Entity("CompanyAPI.Domain.OrganizationUserRoleHistory", b =>
                {
                    b.Property<int>("OrganizationUserRoleHistoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ChangedByUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("HistoryDt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP(6)");

                    b.Property<int>("OrganizationId")
                        .HasColumnType("int");

                    b.Property<int>("OrganizationRoleId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<ulong>("WasDeleted")
                        .HasColumnType("bit");

                    b.HasKey("OrganizationUserRoleHistoryId");

                    b.HasIndex("OrganizationId");

                    b.HasIndex("OrganizationUserRoleHistoryId")
                        .IsUnique();

                    b.HasIndex("UserId");

                    b.ToTable("OrganizationUserRoleHistory");
                });

            modelBuilder.Entity("CompanyAPI.Domain.Region", b =>
                {
                    b.Property<int>("GeoNameId")
                        .HasColumnType("int");

                    b.Property<int>("CountryGeoNameId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("RegionName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("GeoNameId", "CountryGeoNameId");

                    b.HasIndex("CountryGeoNameId");

                    b.HasIndex("GeoNameId")
                        .IsUnique();

                    b.ToTable("Regions");
                });
#pragma warning restore 612, 618
        }
    }
}
