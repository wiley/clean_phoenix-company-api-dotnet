// <auto-generated />
using System;
using CompanyAPI;
using CompanyAPI.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CompanyAPI.Migrations
{
    [DbContext(typeof(CompanyDbContext))]
    [Migration("20200106183308_RemoveCrunchbaseUuidUnique")]
    partial class RemoveCrunchbaseUuidUnique
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("CompanyAPI.Department", b =>
                {
                    b.Property<int>("DepartmentId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("OrganizationId");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasMaxLength(245);

                    b.Property<DateTime>("UpdatedAt");

                    b.HasKey("DepartmentId", "OrganizationId");

                    b.HasIndex("DepartmentId")
                        .IsUnique();

                    b.HasIndex("OrganizationId");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("CompanyAPI.Location", b =>
                {
                    b.Property<int>("LocationId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("OrganizationId");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("LocationName")
                        .IsRequired()
                        .HasMaxLength(245);

                    b.Property<DateTime>("UpdatedAt");

                    b.HasKey("LocationId", "OrganizationId");

                    b.HasIndex("LocationId")
                        .IsUnique();

                    b.HasIndex("OrganizationId");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("CompanyAPI.Organization", b =>
                {
                    b.Property<int>("OrganizationId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("City")
                        .HasMaxLength(245);

                    b.Property<string>("Country")
                        .HasMaxLength(245);

                    b.Property<DateTime>("CreatedAt");

                    b.Property<Guid>("CrunchbaseUuid");

                    b.Property<string>("Domain")
                        .HasMaxLength(245);

                    b.Property<string>("HomepageUrl")
                        .HasMaxLength(1024);

                    b.Property<string>("LogoUrl")
                        .HasMaxLength(512);

                    b.Property<string>("OrganizationName")
                        .IsRequired()
                        .HasMaxLength(512);

                    b.Property<string>("Permalink")
                        .HasMaxLength(512);

                    b.Property<string>("Region")
                        .HasMaxLength(245);

                    b.Property<string>("ShortDescription")
                        .HasMaxLength(512);

                    b.Property<DateTime>("UpdatedAt");

                    b.HasKey("OrganizationId");

                    b.HasIndex("CrunchbaseUuid");

                    b.HasIndex("OrganizationId")
                        .IsUnique();

                    b.ToTable("Organizations");
                });
#pragma warning restore 612, 618
        }
    }
}
